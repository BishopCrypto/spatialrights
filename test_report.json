{
  "config": {
    "configFile": "/Users/ryan/Documents/Claude Projects/newco/playwright.config.js",
    "rootDir": "/Users/ryan/Documents/Claude Projects/newco/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 7
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "json"
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/ryan/Documents/Claude Projects/newco/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 7
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/ryan/Documents/Claude Projects/newco/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.1",
    "workers": 7,
    "webServer": {
      "command": "echo \"Server already running at localhost:3200\"",
      "port": 3200,
      "reuseExistingServer": true
    }
  },
  "suites": [
    {
      "title": "booking-api.spec.js",
      "file": "booking-api.spec.js",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Booking API Tests",
          "file": "booking-api.spec.js",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should create a new booking via POST /api/bookings",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 858,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:31:31",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 31,
                          "line": 31
                        },
                        "snippet": "  29 |     });\n  30 |\n> 31 |     expect(response.status()).toBe(201);\n     |                               ^\n  32 |\n  33 |     const result = await response.json();\n  34 |     expect(result.success).toBe(true);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 31,
                            "line": 31
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  29 |     });\n  30 |\n> 31 |     expect(response.status()).toBe(201);\n     |                               ^\n  32 |\n  33 |     const result = await response.json();\n  34 |     expect(result.success).toBe(true);\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:31:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:36.517Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 31,
                        "line": 31
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-f3da663ff355e05216f8",
              "file": "booking-api.spec.js",
              "line": 5,
              "column": 3
            },
            {
              "title": "should validate required fields in POST /api/bookings",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 865,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:65:33",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 33,
                          "line": 65
                        },
                        "snippet": "  63 |       });\n  64 |\n> 65 |       expect(response.status()).toBe(400);\n     |                                 ^\n  66 |       const result = await response.json();\n  67 |       expect(result.error).toContain('Missing required field');\n  68 |     }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 33,
                            "line": 65
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  63 |       });\n  64 |\n> 65 |       expect(response.status()).toBe(400);\n     |                                 ^\n  66 |       const result = await response.json();\n  67 |       expect(result.error).toContain('Missing required field');\n  68 |     }\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:65:33"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:36.508Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 33,
                        "line": 65
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-c70d493b1371a0285e8b",
              "file": "booking-api.spec.js",
              "line": 42,
              "column": 3
            },
            {
              "title": "should validate date fields in POST /api/bookings",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 852,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:93:31",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 31,
                          "line": 93
                        },
                        "snippet": "  91 |     });\n  92 |\n> 93 |     expect(response.status()).toBe(400);\n     |                               ^\n  94 |     let result = await response.json();\n  95 |     expect(result.error).toContain('Start date cannot be in the past');\n  96 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 31,
                            "line": 93
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  91 |     });\n  92 |\n> 93 |     expect(response.status()).toBe(400);\n     |                               ^\n  94 |     let result = await response.json();\n  95 |     expect(result.error).toContain('Start date cannot be in the past');\n  96 |\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:93:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:36.515Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 31,
                        "line": 93
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-3741c46ec9f2c7961cb0",
              "file": "booking-api.spec.js",
              "line": 71,
              "column": 3
            },
            {
              "title": "should retrieve bookings via GET /api/bookings",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 848,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:117:31",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 31,
                          "line": 117
                        },
                        "snippet": "  115 |     const response = await request.get('/api/bookings');\n  116 |\n> 117 |     expect(response.status()).toBe(200);\n      |                               ^\n  118 |\n  119 |     const result = await response.json();\n  120 |     expect(result.success).toBe(true);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 31,
                            "line": 117
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  115 |     const response = await request.get('/api/bookings');\n  116 |\n> 117 |     expect(response.status()).toBe(200);\n      |                               ^\n  118 |\n  119 |     const result = await response.json();\n  120 |     expect(result.success).toBe(true);\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:117:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:36.515Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 31,
                        "line": 117
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-a57dee6c3c1da77d3468",
              "file": "booking-api.spec.js",
              "line": 114,
              "column": 3
            },
            {
              "title": "should filter bookings by query parameters",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 845,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:129:35",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 35,
                          "line": 129
                        },
                        "snippet": "  127 |     // Test filtering by zone_id\n  128 |     const zoneResponse = await request.get('/api/bookings?zone_id=esb-north-facade');\n> 129 |     expect(zoneResponse.status()).toBe(200);\n      |                                   ^\n  130 |\n  131 |     // Test filtering by property_id\n  132 |     const propertyResponse = await request.get('/api/bookings?property_id=empire-state-building');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 35,
                            "line": 129
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  127 |     // Test filtering by zone_id\n  128 |     const zoneResponse = await request.get('/api/bookings?zone_id=esb-north-facade');\n> 129 |     expect(zoneResponse.status()).toBe(200);\n      |                                   ^\n  130 |\n  131 |     // Test filtering by property_id\n  132 |     const propertyResponse = await request.get('/api/bookings?property_id=empire-state-building');\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:129:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:36.525Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 35,
                        "line": 129
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-e410510bd0929fd23589",
              "file": "booking-api.spec.js",
              "line": 126,
              "column": 3
            },
            {
              "title": "should retrieve specific booking via GET /api/bookings/[id]",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 807,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:169:37",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 37,
                          "line": 169
                        },
                        "snippet": "  167 |     });\n  168 |\n> 169 |     expect(createResponse.status()).toBe(201);\n      |                                     ^\n  170 |     const createResult = await createResponse.json();\n  171 |     const bookingId = createResult.booking.id;\n  172 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 37,
                            "line": 169
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  167 |     });\n  168 |\n> 169 |     expect(createResponse.status()).toBe(201);\n      |                                     ^\n  170 |     const createResult = await createResponse.json();\n  171 |     const bookingId = createResult.booking.id;\n  172 |\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:169:37"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:36.566Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 37,
                        "line": 169
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-27ddd10d38ee292bee0d",
              "file": "booking-api.spec.js",
              "line": 151,
              "column": 3
            },
            {
              "title": "should return 404 for non-existent booking ID",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 1154,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:187:31",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 31,
                          "line": 187
                        },
                        "snippet": "  185 |   test('should return 404 for non-existent booking ID', async ({ request }) => {\n  186 |     const response = await request.get('/api/bookings/non-existent-id');\n> 187 |     expect(response.status()).toBe(404);\n      |                               ^\n  188 |\n  189 |     const result = await response.json();\n  190 |     expect(result.error).toBe('Booking not found');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 31,
                            "line": 187
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  185 |   test('should return 404 for non-existent booking ID', async ({ request }) => {\n  186 |     const response = await request.get('/api/bookings/non-existent-id');\n> 187 |     expect(response.status()).toBe(404);\n      |                               ^\n  188 |\n  189 |     const result = await response.json();\n  190 |     expect(result.error).toBe('Booking not found');\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:187:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:36.545Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 31,
                        "line": 187
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-41affd13b05b667ced3e",
              "file": "booking-api.spec.js",
              "line": 185,
              "column": 3
            },
            {
              "title": "should update booking status via PATCH /api/bookings/[id]",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 33,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:211:37",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 37,
                          "line": 211
                        },
                        "snippet": "  209 |     });\n  210 |\n> 211 |     expect(createResponse.status()).toBe(201);\n      |                                     ^\n  212 |     const createResult = await createResponse.json();\n  213 |     const bookingId = createResult.booking.id;\n  214 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 37,
                            "line": 211
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  209 |     });\n  210 |\n> 211 |     expect(createResponse.status()).toBe(201);\n      |                                     ^\n  212 |     const createResult = await createResponse.json();\n  213 |     const bookingId = createResult.booking.id;\n  214 |\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:211:37"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:37.843Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 37,
                        "line": 211
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-eff2a61adfd3af26f641",
              "file": "booking-api.spec.js",
              "line": 193,
              "column": 3
            },
            {
              "title": "should delete booking via DELETE /api/bookings/[id]",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 58,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:246:37",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 37,
                          "line": 246
                        },
                        "snippet": "  244 |     });\n  245 |\n> 246 |     expect(createResponse.status()).toBe(201);\n      |                                     ^\n  247 |     const createResult = await createResponse.json();\n  248 |     const bookingId = createResult.booking.id;\n  249 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 37,
                            "line": 246
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  244 |     });\n  245 |\n> 246 |     expect(createResponse.status()).toBe(201);\n      |                                     ^\n  247 |     const createResult = await createResponse.json();\n  248 |     const bookingId = createResult.booking.id;\n  249 |\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:246:37"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:37.821Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 37,
                        "line": 246
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-4dc0c825dd025c37b4f8",
              "file": "booking-api.spec.js",
              "line": 228,
              "column": 3
            },
            {
              "title": "should detect date conflicts for same zone",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 40,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:281:36",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                          "column": 36,
                          "line": 281
                        },
                        "snippet": "  279 |     });\n  280 |\n> 281 |     expect(firstResponse.status()).toBe(201);\n      |                                    ^\n  282 |\n  283 |     // Try to create overlapping booking for same zone\n  284 |     const conflictingBooking = {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                            "column": 36,
                            "line": 281
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  279 |     });\n  280 |\n> 281 |     expect(firstResponse.status()).toBe(201);\n      |                                    ^\n  282 |\n  283 |     // Try to create overlapping booking for same zone\n  284 |     const conflictingBooking = {\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js:281:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:37.836Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-api.spec.js",
                        "column": 36,
                        "line": 281
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-68ad074c98c3a9c6f0ae",
              "file": "booking-api.spec.js",
              "line": 263,
              "column": 3
            },
            {
              "title": "should handle API errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 49,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:37.828Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "640cf4cf5edfed291b4c-6735329cfcef110915c0",
              "file": "booking-api.spec.js",
              "line": 305,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "booking-errors.spec.js",
      "file": "booking-errors.spec.js",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Booking Error Handling Tests",
          "file": "booking-errors.spec.js",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should handle invalid zone IDs gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1915,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:37.831Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "eb375983ceb9d8849c30-8080817b46a5d6f857b0",
              "file": "booking-errors.spec.js",
              "line": 5,
              "column": 3
            },
            {
              "title": "should handle non-existent property IDs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1730,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:37.837Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "eb375983ceb9d8849c30-fbc1da4877ad5bea9f4e",
              "file": "booking-errors.spec.js",
              "line": 20,
              "column": 3
            },
            {
              "title": "should handle invalid booking confirmation IDs",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 6495,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js:36:100",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                          "column": 100,
                          "line": 36
                        },
                        "snippet": "  34 |     // Should show error message\n  35 |     await expect(page.locator('h1', { hasText: 'Booking Not Found' })).toBeVisible();\n> 36 |     await expect(page.locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')).toBeVisible();\n     |                                                                                                    ^\n  37 |\n  38 |     // Should provide navigation\n  39 |     const browseButton = page.locator('a', { hasText: 'Browse Properties' });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                            "column": 100,
                            "line": 36
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')\u001b[22m\n\n\n  34 |     // Should show error message\n  35 |     await expect(page.locator('h1', { hasText: 'Booking Not Found' })).toBeVisible();\n> 36 |     await expect(page.locator('text=The booking confirmation you\\'re looking for doesn\\'t exist')).toBeVisible();\n     |                                                                                                    ^\n  37 |\n  38 |     // Should provide navigation\n  39 |     const browseButton = page.locator('a', { hasText: 'Browse Properties' });\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js:36:100"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:38.166Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-errors-Booking-Err-672a4-id-booking-confirmation-IDs-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                        "column": 100,
                        "line": 36
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "eb375983ceb9d8849c30-2e303ec458522afd2594",
              "file": "booking-errors.spec.js",
              "line": 31,
              "column": 3
            },
            {
              "title": "should validate date ranges in booking form",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 3,
                      "status": "timedOut",
                      "duration": 30017,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                            "column": 16,
                            "line": 53
                          },
                          "message": "Error: page.fill: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[placeholder*=\"Campaign\"]')\u001b[22m\n\n\n  51 |     await page.fill('input[placeholder=\"John Smith\"]', 'John Doe');\n  52 |     await page.fill('input[type=\"email\"]', 'john@test.com');\n> 53 |     await page.fill('input[placeholder*=\"Campaign\"]', 'Test Campaign');\n     |                ^\n  54 |     await page.fill('textarea', 'Test description');\n  55 |\n  56 |     // Set past start date\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js:53:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:38.404Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-errors-Booking-Err-66927-date-ranges-in-booking-form-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "eb375983ceb9d8849c30-e5c3212d8a2ea25a5bed",
              "file": "booking-errors.spec.js",
              "line": 43,
              "column": 3
            },
            {
              "title": "should handle form submission errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 30018,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                            "column": 16,
                            "line": 94
                          },
                          "message": "Error: page.fill: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[placeholder*=\"Campaign\"]')\u001b[22m\n\n\n  92 |     await page.fill('input[placeholder=\"John Smith\"]', 'John Doe');\n  93 |     await page.fill('input[type=\"email\"]', 'invalid-email-format'); // Invalid email format\n> 94 |     await page.fill('input[placeholder*=\"Campaign\"]', 'Error Test Campaign');\n     |                ^\n  95 |     await page.fill('textarea', 'Test description');\n  96 |\n  97 |     const tomorrow = new Date();\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js:94:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:38.416Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-errors-Booking-Err-a998d-ubmission-errors-gracefully-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "eb375983ceb9d8849c30-523750f65f9fec9bebb7",
              "file": "booking-errors.spec.js",
              "line": 85,
              "column": 3
            },
            {
              "title": "should prevent double submission of booking form",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 30019,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                            "column": 16,
                            "line": 129
                          },
                          "message": "Error: page.fill: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[placeholder*=\"Campaign\"]')\u001b[22m\n\n\n  127 |     await page.fill('input[placeholder=\"John Smith\"]', 'John Doe');\n  128 |     await page.fill('input[type=\"email\"]', 'john@doubletest.com');\n> 129 |     await page.fill('input[placeholder*=\"Campaign\"]', 'Double Submit Campaign');\n      |                ^\n  130 |     await page.fill('textarea', 'Test description');\n  131 |\n  132 |     const tomorrow = new Date();\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js:129:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:37.898Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-errors-Booking-Err-16a95--submission-of-booking-form-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "eb375983ceb9d8849c30-dfaae9e6ff303e894ae2",
              "file": "booking-errors.spec.js",
              "line": 120,
              "column": 3
            },
            {
              "title": "should handle network errors during booking",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 30018,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                            "column": 16,
                            "line": 162
                          },
                          "message": "Error: page.fill: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[placeholder*=\"Campaign\"]')\u001b[22m\n\n\n  160 |     await page.fill('input[placeholder=\"John Smith\"]', 'John Doe');\n  161 |     await page.fill('input[type=\"email\"]', 'john@networktest.com');\n> 162 |     await page.fill('input[placeholder*=\"Campaign\"]', 'Network Error Campaign');\n      |                ^\n  163 |     await page.fill('textarea', 'Test description');\n  164 |\n  165 |     const tomorrow = new Date();\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js:162:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:38.405Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-errors-Booking-Err-f3202-twork-errors-during-booking-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "eb375983ceb9d8849c30-647e3c9001b0f2eec3fd",
              "file": "booking-errors.spec.js",
              "line": 152,
              "column": 3
            },
            {
              "title": "should validate email format in booking form",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 732,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:39.808Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "eb375983ceb9d8849c30-87568408b04dfd397348",
              "file": "booking-errors.spec.js",
              "line": 195,
              "column": 3
            },
            {
              "title": "should handle booking confirmation loading states",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 30017,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js",
                            "column": 16,
                            "line": 239
                          },
                          "message": "Error: page.fill: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[placeholder*=\"Campaign\"]')\u001b[22m\n\n\n  237 |     await page.fill('input[placeholder=\"John Smith\"]', 'John Doe');\n  238 |     await page.fill('input[type=\"email\"]', 'john@loadingtest.com');\n> 239 |     await page.fill('input[placeholder*=\"Campaign\"]', 'Loading Test Campaign');\n      |                ^\n  240 |     await page.fill('textarea', 'Test description');\n  241 |\n  242 |     const tomorrow = new Date();\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-errors.spec.js:239:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:40.017Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-errors-Booking-Err-08c5c-confirmation-loading-states-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "eb375983ceb9d8849c30-84d4b0131f904b074312",
              "file": "booking-errors.spec.js",
              "line": 229,
              "column": 3
            },
            {
              "title": "should handle empty or missing zone data gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 297,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:40.546Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "eb375983ceb9d8849c30-f681f8cbe1a9366230d7",
              "file": "booking-errors.spec.js",
              "line": 266,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "booking-flow.spec.js",
      "file": "booking-flow.spec.js",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "AR Property Booking Flow Tests",
          "file": "booking-flow.spec.js",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should complete full booking flow from property listing to confirmation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 5280,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/Properties/\u001b[39m\nReceived string:  \u001b[31m\"SpatialRights - AR Property Rights Marketplace\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveTitle\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"SpatialRights - AR Property Rights Marketplace\"\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/Properties/\u001b[39m\nReceived string:  \u001b[31m\"SpatialRights - AR Property Rights Marketplace\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveTitle\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"SpatialRights - AR Property Rights Marketplace\"\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:8:24",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                          "column": 24,
                          "line": 8
                        },
                        "snippet": "   6 |     // Navigate to properties page\n   7 |     await page.goto('/properties');\n>  8 |     await expect(page).toHaveTitle(/Properties/);\n     |                        ^\n   9 |\n  10 |     // Verify properties are displayed\n  11 |     await expect(page.locator('text=Empire State Building')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                            "column": 24,
                            "line": 8
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/Properties/\u001b[39m\nReceived string:  \u001b[31m\"SpatialRights - AR Property Rights Marketplace\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveTitle\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"SpatialRights - AR Property Rights Marketplace\"\u001b[22m\n\n\n   6 |     // Navigate to properties page\n   7 |     await page.goto('/properties');\n>  8 |     await expect(page).toHaveTitle(/Properties/);\n     |                        ^\n   9 |\n  10 |     // Verify properties are displayed\n  11 |     await expect(page.locator('text=Empire State Building')).toBeVisible();\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:8:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:40.849Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-flow-AR-Property-B-2ebde-rty-listing-to-confirmation-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                        "column": 24,
                        "line": 8
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "f717bc3f4770b3443d64-de45d4c1383f09b3c82f",
              "file": "booking-flow.spec.js",
              "line": 5,
              "column": 3
            },
            {
              "title": "should navigate between property listings and property details",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 6,
                      "status": "passed",
                      "duration": 674,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:45.143Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "f717bc3f4770b3443d64-a07ed2e69a6274829f2e",
              "file": "booking-flow.spec.js",
              "line": 75,
              "column": 3
            },
            {
              "title": "should display zone information and booking buttons correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 280,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=North Facade Premium') resolved to 2 elements:\n    1) <h3 class=\"font-semibold text-gray-900 mb-1\">North Facade Premium</h3> aka getByRole('heading', { name: 'North Facade Premium' })\n    2) <div class=\"font-medium\">North Facade Premium</div> aka locator('div').filter({ hasText: /^North Facade Premium$/ })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=North Facade Premium') resolved to 2 elements:\n    1) <h3 class=\"font-semibold text-gray-900 mb-1\">North Facade Premium</h3> aka getByRole('heading', { name: 'North Facade Premium' })\n    2) <div class=\"font-medium\">North Facade Premium</div> aka locator('div').filter({ hasText: /^North Facade Premium$/ })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium')\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:99:61",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                          "column": 61,
                          "line": 99
                        },
                        "snippet": "   97 |\n   98 |     // Check zone information is displayed\n>  99 |     await expect(page.locator('text=North Facade Premium')).toBeVisible();\n      |                                                             ^\n  100 |     await expect(page.locator('text=South Facade Standard')).toBeVisible();\n  101 |\n  102 |     // Check zone details"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                            "column": 61,
                            "line": 99
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=North Facade Premium') resolved to 2 elements:\n    1) <h3 class=\"font-semibold text-gray-900 mb-1\">North Facade Premium</h3> aka getByRole('heading', { name: 'North Facade Premium' })\n    2) <div class=\"font-medium\">North Facade Premium</div> aka locator('div').filter({ hasText: /^North Facade Premium$/ })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium')\u001b[22m\n\n\n   97 |\n   98 |     // Check zone information is displayed\n>  99 |     await expect(page.locator('text=North Facade Premium')).toBeVisible();\n      |                                                             ^\n  100 |     await expect(page.locator('text=South Facade Standard')).toBeVisible();\n  101 |\n  102 |     // Check zone details\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:99:61"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:45.922Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-flow-AR-Property-B-59046-d-booking-buttons-correctly-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                        "column": 61,
                        "line": 99
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "f717bc3f4770b3443d64-5726210250845458dfd0",
              "file": "booking-flow.spec.js",
              "line": 95,
              "column": 3
            },
            {
              "title": "should handle form validation errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 30016,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                            "column": 24,
                            "line": 127
                          },
                          "message": "Error: locator.click: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('button[type=\"submit\"]')\u001b[22m\n\u001b[2m    - locator resolved to <button disabled type=\"submit\" class=\"w-full btn btn-primary text-lg py-3 disabled:opacity-50 disabled:cursor-not-allowed\">Submit Booking Request - $0</button>\u001b[22m\n\u001b[2m  - attempting click action\u001b[22m\n\u001b[2m    2 × waiting for element to be visible, enabled and stable\u001b[22m\n\u001b[2m      - element is not enabled\u001b[22m\n\u001b[2m    - retrying click action\u001b[22m\n\u001b[2m    - waiting 20ms\u001b[22m\n\u001b[2m    2 × waiting for element to be visible, enabled and stable\u001b[22m\n\u001b[2m      - element is not enabled\u001b[22m\n\u001b[2m    - retrying click action\u001b[22m\n\u001b[2m      - waiting 100ms\u001b[22m\n\u001b[2m    57 × waiting for element to be visible, enabled and stable\u001b[22m\n\u001b[2m       - element is not enabled\u001b[22m\n\u001b[2m     - retrying click action\u001b[22m\n\u001b[2m       - waiting 500ms\u001b[22m\n\n\n  125 |     // Try to submit empty form\n  126 |     const submitButton = page.locator('button[type=\"submit\"]');\n> 127 |     await submitButton.click();\n      |                        ^\n  128 |\n  129 |     // Should show HTML5 validation errors or prevent submission\n  130 |     // The form should not submit and stay on the same page\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:127:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:46.404Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-flow-AR-Property-B-89ace-ndle-form-validation-errors-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "f717bc3f4770b3443d64-997d40f4bb4322f78bba",
              "file": "booking-flow.spec.js",
              "line": 119,
              "column": 3
            },
            {
              "title": "should calculate pricing correctly based on form inputs",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 451,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=/\\\\$[0-9,]+/') resolved to 4 elements:\n    1) <button disabled type=\"submit\" class=\"w-full btn btn-primary text-lg py-3 disabled:opacity-50 disabled:cursor-not-allowed\">Submit Booking Request - $0</button> aka getByRole('button', { name: 'Submit Booking Request - $' })\n    2) <span class=\"font-medium\">$250,000</span> aka getByText('$250,000')\n    3) <span class=\"font-medium\">+$125,000</span> aka getByText('+$')\n    4) <span class=\"text-green-600\">$0</span> aka getByText('$0', { exact: true })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=/\\\\$[0-9,]+/')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=/\\\\$[0-9,]+/') resolved to 4 elements:\n    1) <button disabled type=\"submit\" class=\"w-full btn btn-primary text-lg py-3 disabled:opacity-50 disabled:cursor-not-allowed\">Submit Booking Request - $0</button> aka getByRole('button', { name: 'Submit Booking Request - $' })\n    2) <span class=\"font-medium\">$250,000</span> aka getByText('$250,000')\n    3) <span class=\"font-medium\">+$125,000</span> aka getByText('+$')\n    4) <span class=\"text-green-600\">$0</span> aka getByText('$0', { exact: true })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=/\\\\$[0-9,]+/')\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:158:53",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                          "column": 53,
                          "line": 158
                        },
                        "snippet": "  156 |\n  157 |     // Check that pricing updates\n> 158 |     await expect(page.locator('text=/\\\\$[0-9,]+/')).toBeVisible();\n      |                                                     ^\n  159 |\n  160 |     // Change budget package and verify price updates\n  161 |     await page.selectOption('select', 'premium');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                            "column": 53,
                            "line": 158
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=/\\\\$[0-9,]+/') resolved to 4 elements:\n    1) <button disabled type=\"submit\" class=\"w-full btn btn-primary text-lg py-3 disabled:opacity-50 disabled:cursor-not-allowed\">Submit Booking Request - $0</button> aka getByRole('button', { name: 'Submit Booking Request - $' })\n    2) <span class=\"font-medium\">$250,000</span> aka getByText('$250,000')\n    3) <span class=\"font-medium\">+$125,000</span> aka getByText('+$')\n    4) <span class=\"text-green-600\">$0</span> aka getByText('$0', { exact: true })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=/\\\\$[0-9,]+/')\u001b[22m\n\n\n  156 |\n  157 |     // Check that pricing updates\n> 158 |     await expect(page.locator('text=/\\\\$[0-9,]+/')).toBeVisible();\n      |                                                     ^\n  159 |\n  160 |     // Change budget package and verify price updates\n  161 |     await page.selectOption('select', 'premium');\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:158:53"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:46.459Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-flow-AR-Property-B-d8a90-rectly-based-on-form-inputs-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                        "column": 53,
                        "line": 158
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "f717bc3f4770b3443d64-969e775d48300248b26e",
              "file": "booking-flow.spec.js",
              "line": 143,
              "column": 3
            },
            {
              "title": "should show zone details in booking summary",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 5435,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=North Facade Premium, text=South Facade')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium, text=South Facade')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=North Facade Premium, text=South Facade')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium, text=South Facade')\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:176:80",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                          "column": 80,
                          "line": 176
                        },
                        "snippet": "  174 |\n  175 |     // Verify zone details are shown\n> 176 |     await expect(page.locator('text=North Facade Premium, text=South Facade')).toBeVisible();\n      |                                                                                ^\n  177 |     await expect(page.locator('text=Empire State Building')).toBeVisible();\n  178 |     await expect(page.locator('text=350 5th Ave')).toBeVisible();\n  179 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                            "column": 80,
                            "line": 176
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=North Facade Premium, text=South Facade')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium, text=South Facade')\u001b[22m\n\n\n  174 |\n  175 |     // Verify zone details are shown\n> 176 |     await expect(page.locator('text=North Facade Premium, text=South Facade')).toBeVisible();\n      |                                                                                ^\n  177 |     await expect(page.locator('text=Empire State Building')).toBeVisible();\n  178 |     await expect(page.locator('text=350 5th Ave')).toBeVisible();\n  179 |\n    at /Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js:176:80"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:47.252Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/booking-flow-AR-Property-B-daad0--details-in-booking-summary-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/booking-flow.spec.js",
                        "column": 80,
                        "line": 176
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "f717bc3f4770b3443d64-9b225e042ec7dbaec7de",
              "file": "booking-flow.spec.js",
              "line": 167,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "properties.spec.js",
      "file": "properties.spec.js",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Properties Page Tests",
          "file": "properties.spec.js",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should load properties page and display NYC sample data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 5302,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/Properties/\u001b[39m\nReceived string:  \u001b[31m\"SpatialRights - AR Property Rights Marketplace\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveTitle\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"SpatialRights - AR Property Rights Marketplace\"\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/Properties/\u001b[39m\nReceived string:  \u001b[31m\"SpatialRights - AR Property Rights Marketplace\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveTitle\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"SpatialRights - AR Property Rights Marketplace\"\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:8:24",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                          "column": 24,
                          "line": 8
                        },
                        "snippet": "   6 |\n   7 |     // Check page loads successfully\n>  8 |     await expect(page).toHaveTitle(/Properties/);\n     |                        ^\n   9 |\n  10 |     // Check for NYC properties mentioned in user requirements\n  11 |     // Tier 1 properties"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                            "column": 24,
                            "line": 8
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mpage\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nExpected pattern: \u001b[32m/Properties/\u001b[39m\nReceived string:  \u001b[31m\"SpatialRights - AR Property Rights Marketplace\"\u001b[39m\nTimeout: 5000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveTitle\" with timeout 5000ms\u001b[22m\n\u001b[2m    9 × unexpected value \"SpatialRights - AR Property Rights Marketplace\"\u001b[22m\n\n\n   6 |\n   7 |     // Check page loads successfully\n>  8 |     await expect(page).toHaveTitle(/Properties/);\n     |                        ^\n   9 |\n  10 |     // Check for NYC properties mentioned in user requirements\n  11 |     // Tier 1 properties\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:8:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:53.038Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/properties-Properties-Page-c8694-and-display-NYC-sample-data-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                        "column": 24,
                        "line": 8
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "c4c444882a0ed0752791-320a05924c42d4a53e51",
              "file": "properties.spec.js",
              "line": 4,
              "column": 3
            },
            {
              "title": "should display property tiers correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 5392,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Tier 1')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Tier 1')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Tier 1')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Tier 1')\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:34:47",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                          "column": 47,
                          "line": 34
                        },
                        "snippet": "  32 |\n  33 |     // Check tier structure is displayed\n> 34 |     await expect(page.locator('text=Tier 1')).toBeVisible();\n     |                                               ^\n  35 |     await expect(page.locator('text=Tier 2')).toBeVisible();\n  36 |     await expect(page.locator('text=Tier 3')).toBeVisible();\n  37 |     await expect(page.locator('text=Tier 4')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                            "column": 47,
                            "line": 34
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('text=Tier 1')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=Tier 1')\u001b[22m\n\n\n  32 |\n  33 |     // Check tier structure is displayed\n> 34 |     await expect(page.locator('text=Tier 1')).toBeVisible();\n     |                                               ^\n  35 |     await expect(page.locator('text=Tier 2')).toBeVisible();\n  36 |     await expect(page.locator('text=Tier 3')).toBeVisible();\n  37 |     await expect(page.locator('text=Tier 4')).toBeVisible();\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:34:47"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:00:58.703Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/properties-Properties-Page-248b9-ay-property-tiers-correctly-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                        "column": 47,
                        "line": 34
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "c4c444882a0ed0752791-d5c8c78362887ebe83b2",
              "file": "properties.spec.js",
              "line": 30,
              "column": 3
            },
            {
              "title": "should handle property navigation and details",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 278,
                      "error": {
                        "message": "Error: locator.click: Unexpected token \"=\" while parsing css selector \"a[href*=\"/properties/empire-state-building\"], text=Empire State Building\". Did you mean to CSS.escape it?\nCall log:\n\u001b[2m  - waiting for a[href*=\"/properties/empire-state-building\"], text=Empire State Building >> nth=0\u001b[22m\n",
                        "stack": "Error: locator.click: Unexpected token \"=\" while parsing css selector \"a[href*=\"/properties/empire-state-building\"], text=Empire State Building\". Did you mean to CSS.escape it?\nCall log:\n\u001b[2m  - waiting for a[href*=\"/properties/empire-state-building\"], text=Empire State Building >> nth=0\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:49:27",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                          "column": 27,
                          "line": 49
                        },
                        "snippet": "  47 |     // Navigate to Empire State Building detail page\n  48 |     const empireStateLink = page.locator('a[href*=\"/properties/empire-state-building\"], text=Empire State Building').first();\n> 49 |     await empireStateLink.click();\n     |                           ^\n  50 |\n  51 |     // Verify navigation to property detail page\n  52 |     await expect(page).toHaveURL(/\\/properties\\/empire-state-building/);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                            "column": 27,
                            "line": 49
                          },
                          "message": "Error: locator.click: Unexpected token \"=\" while parsing css selector \"a[href*=\"/properties/empire-state-building\"], text=Empire State Building\". Did you mean to CSS.escape it?\nCall log:\n\u001b[2m  - waiting for a[href*=\"/properties/empire-state-building\"], text=Empire State Building >> nth=0\u001b[22m\n\n\n  47 |     // Navigate to Empire State Building detail page\n  48 |     const empireStateLink = page.locator('a[href*=\"/properties/empire-state-building\"], text=Empire State Building').first();\n> 49 |     await empireStateLink.click();\n     |                           ^\n  50 |\n  51 |     // Verify navigation to property detail page\n  52 |     await expect(page).toHaveURL(/\\/properties\\/empire-state-building/);\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:49:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:01:04.458Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/properties-Properties-Page-80de1-erty-navigation-and-details-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                        "column": 27,
                        "line": 49
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "c4c444882a0ed0752791-96b2f2540e52c365b2ec",
              "file": "properties.spec.js",
              "line": 44,
              "column": 3
            },
            {
              "title": "should display AR zones with booking functionality on property detail page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 610,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=North Facade Premium') resolved to 2 elements:\n    1) <h3 class=\"font-semibold text-gray-900 mb-1\">North Facade Premium</h3> aka getByRole('heading', { name: 'North Facade Premium' })\n    2) <div class=\"font-medium\">North Facade Premium</div> aka locator('div').filter({ hasText: /^North Facade Premium$/ })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=North Facade Premium') resolved to 2 elements:\n    1) <h3 class=\"font-semibold text-gray-900 mb-1\">North Facade Premium</h3> aka getByRole('heading', { name: 'North Facade Premium' })\n    2) <div class=\"font-medium\">North Facade Premium</div> aka locator('div').filter({ hasText: /^North Facade Premium$/ })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium')\u001b[22m\n\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:71:61",
                        "location": {
                          "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                          "column": 61,
                          "line": 71
                        },
                        "snippet": "  69 |\n  70 |     // Check for available zones\n> 71 |     await expect(page.locator('text=North Facade Premium')).toBeVisible();\n     |                                                             ^\n  72 |     await expect(page.locator('text=South Facade Standard')).toBeVisible();\n  73 |\n  74 |     // Verify zone availability indicators"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                            "column": 61,
                            "line": 71
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: locator('text=North Facade Premium') resolved to 2 elements:\n    1) <h3 class=\"font-semibold text-gray-900 mb-1\">North Facade Premium</h3> aka getByRole('heading', { name: 'North Facade Premium' })\n    2) <div class=\"font-medium\">North Facade Premium</div> aka locator('div').filter({ hasText: /^North Facade Premium$/ })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('text=North Facade Premium')\u001b[22m\n\n\n  69 |\n  70 |     // Check for available zones\n> 71 |     await expect(page.locator('text=North Facade Premium')).toBeVisible();\n     |                                                             ^\n  72 |     await expect(page.locator('text=South Facade Standard')).toBeVisible();\n  73 |\n  74 |     // Verify zone availability indicators\n    at /Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js:71:61"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:01:05.079Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/ryan/Documents/Claude Projects/newco/test-results/properties-Properties-Page-07501-ity-on-property-detail-page-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/ryan/Documents/Claude Projects/newco/tests/properties.spec.js",
                        "column": 61,
                        "line": 71
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "c4c444882a0ed0752791-e5ebff612c3289ef0450",
              "file": "properties.spec.js",
              "line": 64,
              "column": 3
            },
            {
              "title": "should show zone availability summary on property detail page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 6,
                      "status": "passed",
                      "duration": 289,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:01:06.034Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "c4c444882a0ed0752791-cd57f2750126150b2816",
              "file": "properties.spec.js",
              "line": 88,
              "column": 3
            },
            {
              "title": "should display property locations and coordinates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 6,
                      "status": "passed",
                      "duration": 255,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-29T02:01:06.413Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "c4c444882a0ed0752791-097c2780cf956cfd9c99",
              "file": "properties.spec.js",
              "line": 106,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-09-29T02:00:35.909Z",
    "duration": 40611.945,
    "expected": 8,
    "skipped": 0,
    "unexpected": 25,
    "flaky": 0
  }
}
